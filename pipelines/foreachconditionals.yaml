# To execute this pipeline, from repo directory shell something like:
# pypyr foreachconditionals ceiling ceiling ceiling "keep on trying"
# or
# pypyr foreachconditionals pipe pipe "keep on trying"
context_parser: pypyr.parser.list

steps:
  - name: pypyr.steps.default
    description: set some context defaults for the foreach loop. you could also do this with 'in' on the foreach step.
    in:
      defaults:
        ceilingCount: 0
        pipeCount: 0
        keepOnTrying: True
        skipOnOver: False
  - name: pypyr.steps.py
    description: relatively arb py code. knock three times, then twice on the pipe.
    foreach: '{argList}'
    run: '{keepOnTrying}'
    skip: '{skipOnOver}'
    in:
        py: |
          if i == 'ceiling':
            ceilingCount = ceilingCount + 1
            print("knock on ceiling")
          elif i == 'pipe':
            pipeCount = pipeCount + 1
            print("bang on pipe")
          elif i == 'keep on trying':
            raise ValueError("This won't run, because the run decorator evals False once the answer is no.")

          if ceilingCount == 3:
            print('thrice on the ceiling: skip on over!')
            skipOnOver = True

          if pipeCount == 2:
            print('twice on the pipe: the answer is no')
            keepOnTrying = False
