steps:
  - name: pypyr.steps.echo
    description: relatively arbitrarily setting some context values here
    in:
      k1:
        k1.1: v1.1
        k1.2:
          k1.2.1: v1.2.1
        k1.3: v1.3
      k2:
        k2.1: v2.1
      echoMe: context set. . .
  - name: pypyr.steps.contextmerge
    description: merging a nest hierarchy into a destination hierarchy
    in:
      contextMerge:
        k1:
          k1.2:
            k1.2.2: '{k2[k2.1]}'
  - name: pypyr.steps.py
    description: pretty print the newly merged k1 to stdout
    in:
      pycode: import json; print(json.dumps(context['k1'], indent=4))
  - name: pypyr.steps.contextsetf
    description: by comparison, contextset overwrites the existing key
    in:
      contextSetf:
        k1:
          k1.2:
            k1.2.2: '{k2[k2.1]}'
  - name: pypyr.steps.py
    description: pretty print the newly overwritten k1 to stdout
    in:
      pycode: import json; print(json.dumps(context['k1'], indent=4))
