# WARNING: Will be working with ./out dir - if you have anything in there you
# want to keep or not potentially overwrite, don't run this.
# To execute this pipeline, from repo directory shell something like:
# pypyr tar --context fileName='myarchive'
context_parser: pypyr.parser.keyvaluepairs
steps:
  - name: pypyr.steps.shell
    description: archive examples to out, extract sample archives to out/originals
    in:
      cmd: mkdir out out/originals || true
  - name: pypyr.steps.tar
    description: default uses xz. you can test your archive with "cd out; tar xf testfile.tar.xz"
    in:
      tarArchive:
        - in: testfiles
          out: out/testfile.tar.xz
  - name: pypyr.steps.contextclear
    in:
      contextClear:
        - tarArchive
  - name: pypyr.steps.tar
    in:
      tarExtract:
        - in: ./out/testfile.tar.xz
          out: out/originals
  - name: pypyr.steps.contextclear
    in:
      contextClear:
        - tarExtract
  - name: pypyr.steps.tar
    description: use gz and get fileName from context
    in:
      tarFormat: gz
      tarArchive:
        - in: ./testfiles
          out: out/{fileName}.tar.gz
  - name: pypyr.steps.tar
    description: use plain tar (no compression)
    in:
      tarFormat: ''
      tarArchive:
        - in: ./testfiles
          out: out/plainole.tar
        - in: ./LICENSE
          out: out/singlefile.tar
