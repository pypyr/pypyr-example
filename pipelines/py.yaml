# To execute this pipeline, from repo directory shell something like:
# pypyr --name py --log 20
  steps:
    - name: pypyr.steps.py
      description: runs arb python
      in:
        # multi-line statement starts with |, per yaml spec
        pycode: |
                  print(f"py step: {0+1}")
                  context['arbvalue'] = 6
                  print(context['arbvalue'])
    - name: pypyr.steps.py
      description: context['arbvalue'] survives between steps.
      in:
        # here splitting multi-line statements with ;
        pycode: print("py step 2"); context['arbvalue'] += 4
    - name: pypyr.steps.contextset
      description: use context values you manipulated with other steps
      in:
        contextSet:
          # the echo step uses echoMe, so assign arbvalue context value to
          # echoMe and the next step will then use this value.
          echoMe: 'arbvalue'
    - pypyr.steps.echo # output: 10. notice mixing and matching complex and simple steps.
